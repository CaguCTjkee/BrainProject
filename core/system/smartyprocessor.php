<?php

/**
 * Created by PhpStorm.
 * User: CaguCT
 * Date: 7/10/17
 * Time: 12:57
 */

namespace Core\System;

include_once SMARTY_DIR . 'Smarty.php';

class SmartyProcessor extends \Smarty
{
    static $_instance;
    //
    const TEMPLATE_FOLDER = 'templates';
    const TEMPLATE_C_FOLDER = 'templates_c';
    const CONFIGS_FOLDER = 'configs';
    const CACHE_FOLDER = 'cache';
    const LEFT_DELIMITER = '{{';
    const RIGHT_DELIMITER = '}}';

    function __construct()
    {
        parent::__construct();

        $this->template_dir = ROOT . DS . self::TEMPLATE_FOLDER . DS . \Core\System\Setup::$TEMPLATE;
        $this->compile_dir = SMARTY_DIR . self::TEMPLATE_C_FOLDER;
        $this->config_dir = SMARTY_DIR . self::CONFIGS_FOLDER;
        $this->cache_dir = SMARTY_DIR . self::CACHE_FOLDER;
        $this->left_delimiter = self::LEFT_DELIMITER;
        $this->right_delimiter = self::RIGHT_DELIMITER;

        // Default assign
        //        $this->assign([
        //            'Settings' => new \Core\System\Setup,
        //        ]);
    }

    static function getInstance()
    {
        if( self::$_instance === null )
            self::$_instance = new self();

        return self::$_instance;
    }

    function moduleDisplay($template = null, $moduleName)
    {
        $moduleTemplate = 'moduleView' . DS . $moduleName . DS . $template;
        if( !is_file(ROOT . DS . self::TEMPLATE_FOLDER . DS . \Core\System\Setup::$TEMPLATE . DS . $moduleTemplate) )
        {
            $moduleTemplate = 'modules' . DS . $moduleName . DS . 'view' . DS . $template;
            if( !is_file(ROOT . DS . self::TEMPLATE_FOLDER . DS . \Core\System\Setup::$TEMPLATE . DS . $moduleTemplate) )
            {
                \Core\System\Request::e404('404 error', '<p>Template <b>' . $moduleTemplate . '</b> is not found<p>');

                return 'Template not found';
            }
        }

        parent::display($moduleTemplate); // TODO: Change the autogenerated stub
    }

    function assign($tpl_var, $value = null, $nocache = false)
    {
        $value = \Core\System\Translate::_t($value);

        return parent::assign($tpl_var, $value, $nocache); // TODO: Change the autogenerated stub
    }
}